How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    If it worked before, the bug lies in the diff.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You learn what and when to commit.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pro is that you don't lose a single change.
    The con is that you take too much time to see where an error was introduced.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It all depends on the tipe of document that is about. Files like the ones of
    a program tend to be modified in batches in contrast with a .doc, that usual
    ly does not influence another file.

How can you use the commands git log and git diff to view the history of files?

    Git log shows all the versions and commentaries and 
    git diff shows all diff between two versions.

How might using version control make you more confident to make changes that
could break something?

    Because if something breaks, you just go back to the older version. Or find 
    the bug in the diff.

Now that you have your workspace set up, what do you want to try using Git for?

    Uploading all my code files.
